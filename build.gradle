plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
    id "io.github.juuxel.loom-vineflower" version "1.11.0" apply false
    id "io.github.pacifistmc.forgix" version "1.2.6"
}

architectury {
    minecraft = project.minecraft_version
}

def platforms = subprojects.name.clone()
platforms.remove("common")
project.ext.set("platforms", platforms)

forgix {
    group = project.maven_group
    mergedJarName = "${project.archives_base_name}-${project.mod_version}-mc${project.minecraft_version}.jar"
    outputDir = "build/libs/merged"

    fabric {
        projectName = "fabric"
        jarLocation = "build/libs/${project.archives_base_name}-${project.mod_version}-mc${project.minecraft_version}-fabric.jar"
    }

    forge {
        projectName = "forge"
        jarLocation = "build/libs/${project.archives_base_name}-${project.mod_version}-mc${project.minecraft_version}-forge.jar"
    }
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.juuxel.loom-vineflower"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://maven.terraformersmc.com/" }
        maven { url "https://maven.shedaniel.me/" }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

build {
    dependsOn subprojects.build

    // Merge multiple JARs if both platforms are enabled
    if (project.platforms.size() >= 2) {
        finalizedBy "mergeJars"
    }
}
